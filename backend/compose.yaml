# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    image: surajkhayamali/chess-backend
    build:
      context: .
    environment:
      NODE_ENV: production
      PORT: ${PORT}
      SALT_ROUNDS: ${SALT_ROUNDS}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      COOKIE_SECRET: ${COOKIE_SECRET}
      COOKIE_MAX_AGE: ${COOKIE_MAX_AGE}
      COOKIE_REFRESH_MAX_AGE: ${COOKIE_REFRESH_MAX_AGE}

      # Database configuration
      DB_TYPE: postgres
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}

      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    ports:
      - 5000:5000

  # The commented out section below is an example of how to define a PostgreSQL
  # database that your application can use. `depends_on` tells Docker Compose to
  # start the database before your application. The `db-data` volume persists the
  # database data between container restarts. The `db-password` secret is used
  # to set the database password. You must create `db/password.txt` and add
  # a password of your choosing to it before running `docker-compose up`.
  #     depends_on:
  #       db:
  #         condition: service_healthy
  db:
    image: postgres
    restart: always
    user: ${DB_USER}
    # secrets:
    #   - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      # - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    # Uncomment these lines for production use. and comment out the below ports
    # expose:
    #   - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis/redis-stack:latest
    restart: unless-stopped
    ports:
      - 6379:6379
    #   - 8001:8001
    volumes:
      - redis_data:/data
    # networks:
    #   - default

volumes:
  db-data:
  redis_data:
# secrets:
#   db-password:
#     file: secrets/db/password.txt
