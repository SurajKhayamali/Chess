services:
  db:
    image: postgres
    restart: always
    user: ${DB_USER}
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis/redis-stack:latest
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379

  server:
    image: surajkhayamali/chess-backend
    build:
      context: ./backend
    environment:
      # NODE_ENV: production
      NODE_ENV: development
      PORT: ${PORT}
      SALT_ROUNDS: ${SALT_ROUNDS}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      COOKIE_SECRET: ${COOKIE_SECRET}
      COOKIE_MAX_AGE: ${COOKIE_MAX_AGE}
      COOKIE_REFRESH_MAX_AGE: ${COOKIE_REFRESH_MAX_AGE}

      # Database configuration
      DB_TYPE: postgres
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}

      # Redis configuration
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}

      CLIENT_URL: ${CLIENT_URL}
    depends_on:
      - db
      - redis
    ports:
      - 5000:5000

  frontend:
    image: surajkhayamali/chess-frontend
    build:
      context: ./frontend-ts
    environment:
      NODE_ENV: production
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - 5173:5173

volumes:
  db-data:
  redis_data:
